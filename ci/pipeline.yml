---
resources:
  - name: source
    type: git
    source:
      uri: {{github-uri}}
      branch: {{github-branch}}

  - name: version
    type: semver
    source:
      bucket: {{s3-bucket-version}}
      initial_version: 1.0.0-rc.0
      key: current-version
      access_key_id: {{s3-access-key-id}}
      secret_access_key: {{s3-secret-access-key}}
      region_name: {{s3-region}}
      endpoint: {{s3-endpoint}}
      sse-kms-key-id: {{s3-sse-kms-key-id}}

  - name: candidate-release
    type: s3
    source:
      bucket: {{s3-bucket-release-candidates}}
      regexp: hello-node-(.*).tgz
      access_key_id: {{s3-access-key-id}}
      secret_access_key: {{s3-secret-access-key}}
      region_name: {{s3-region}}
      endpoint: {{s3-endpoint}}
      sse-kms-key-id: {{s3-sse-kms-key-id}}

  - name: cf-integration
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-integration-space}}
      skip_cert_check: true

jobs:
  - name: build
    serial_groups: [ version ]
    plan:
      - get: source
        trigger: true
      - get: version
        params: { pre: rc }
      - task: install
        file: source/ci/tasks/install.yml
      - task: unit-test
        file: source/ci/tasks/unit.yml
      - put: candidate-release
        params: { file: package/hello-node-*.tgz }
      - put: version
        params: { file: version/number }

  - name: integration-test
    serial: true
    plan:
      - get: candidate-release
        trigger: true
        passed: [ build ]
      - get: source
        passed: [ build ]
      - get: version
        passed: [ build ]
      - task: prepare-integration
        file: pcfdemo/ci/tasks/prepare-integration.yml
        params:
          CF_MANIFEST_HOST: {{cf-manifest-integration-host}}
      - put: cf
        params:
          manifest: prepare-integration/manifest.yml
      - task: integration-test
        file: source/ci/tasks/integration.yml
