---
jobs:
  - name: build
    serial_groups: [ version ]
    plan:
      - get: source
        trigger: true
      - get: node-modules
      - get: version
        params: { pre: rc }
      - task: unit-test
        file: source/ci/tasks/unit.yml
      - task: install
        file: source/ci/tasks/install.yml
      - put: candidate-release
        params: { file: package/((application))-*.tgz }
      - put: version
        params: { file: version/number }

  - name: integration-test
    serial: true
    plan:
      - get: candidate-release
        trigger: true
        passed: [ build ]
      - get: source
        passed: [ build ]
      - get: node-modules
        passed: [ build ]
      - get: version
        passed: [ build ]
      - tasks: prepare
        file: source/ci/tasks/prepare-integration.yml
      - put: cf-integration
        params:
          manifest: prepared/manifest.yml
      - put: cf-route-integration
        params:
          create: ((cf-integration-host)).((cf-integration-domain))
          map: ((cf-integration-host)).((cf-integration-domain))
          application: ((application-name))
      - task: integration-test
        file: source/ci/tasks/integration.yml
        params:
          CF_HOST: ((cf-integration-host))
          CF_DOMAIN: ((cf-integration-domain))

  - name: ship-it
    serial_groups: [ version ]
    plan:
      - get: candidate-release
        passed: [ integration-test ]
      - get: source
        passed: [ integration-test ]
      - get: node-modules
        passed: [ integration-test ]
      - get: version
        params: { bump: final }
      - task: prepare
        file: source/ci/tasks/prepare-final.yml
      - task: release
        file: source/ci/tasks/release.yml
      - put: final-release
        params: { file: release/((application))-*.tgz }
      - put: cf-production
        params:
          manifest: prepare-final/manifest.yml
      - put: version
        params: { file: version/number }

resources:
  - name: source
    type: git
    source: &app-source
      uri: ((github-uri))
      branch: ((github-branch))

  - name: node-modules
    type: npm-cache
    source:
      <<: *app-source
      paths:
        - package.json
        - .npmrc

  - name: version
    type: semver
    source:
      bucket: ((s3-bucket-version))
      initial_version: 1.0.0-rc.0
      key: current-version
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: ((s3-region))
      endpoint: ((s3-endpoint))
      sse-kms-key-id: ((s3-sse-kms-key-id))

  - name: candidate-release
    type: s3
    source:
      bucket: ((s3-bucket-release-candidates))
      regexp: ((application))-(.*).tgz
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: ((s3-region))
      endpoint: ((s3-endpoint))
      sse-kms-key-id: ((s3-sse-kms-key-id))

  - name: cf-integration
    type: cf
    source: &cf-integration-source
      api: ((cf-integration-api))
      username: ((cf-integration-username))
      password: ((cf-integration-password))
      organization: ((cf-integration-org))
      space: ((cf-integration-space))
      skip_cert_check: ((cf-integration-skip-cert))

  - name: cf-integration-route
    type: cf-route
    source:
      <<: *cf-integration-source

  - name: final-release
    type: s3
    source:
      bucket: ((s3-bucket-releases))
      regexp: ((application))-(.*).tgz
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: ((s3-region))
      endpoint: ((s3-endpoint))
      sse-kms-key-id: ((s3-sse-kms-key-id))

  - name: cf-production
    type: cf
    source: &cf-production-source
      api: ((cf-production-api))
      username: ((cf-production-username))
      password: ((cf-production-password))
      organization: ((cf-production-org))
      space: ((cf-production-space))
      skip_cert_check: ((cf-production-skip-cert))

  - name: cf-prodution-route
    type: cf-route
    source:
      <<: *cf-production-source

resource_types:
  - name: npm-cache
    type: docker-image
    source:
      repository: ymedlop/npm-cache-resource

  - name: cf-route
    type: docker-image
    source:
      repository: crdant/cf-route-resource
